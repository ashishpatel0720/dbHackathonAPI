package com.db.dbhackathonapi.Controller;


import com.db.dbhackathonapi.response.Response;
import com.db.dbhackathonapi.Tables.User;
import com.db.dbhackathonapi.Repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

import static com.db.dbhackathonapi.StatusCodeEnum.*;


/*
either you can use
 */

@RestController    // This means that this class is a Controller
@RequestMapping(path="/users") // This means URL's start with /demo (after Application path)
public class UserController {

	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	 @CrossOrigin //Todo:
	@PostMapping("/login")
	public Response login(@RequestBody User user){

		Optional<User>u=userRepository.findById(user.getId());

		if(u.isPresent()){
			if(u.get().getPassword().equals(user.getPassword()))
		        return new Response(OK.getCode(),"Logged In.","You have successfully Signed In",u);
			else
				return new Response(WARNING.getCode(),"Wrong Password","Please re-enter password",null);
		}
		else
			return new Response(ERROR.getCode(),"User Not Found","Please enter again",null);
	}
}